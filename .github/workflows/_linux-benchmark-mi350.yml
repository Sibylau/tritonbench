name: linux-benchmark-mi350
on:
  workflow_call:
    secrets:
      TRITONBENCH_SCRIBE_GRAPHQL_ACCESS_TOKEN:
        required: True
        description: |
          Tritonbench Scribe Graph Access Token
    inputs:
      test_type:
        required: True
        type: string
        description: |
          Type of the test (single or abtest)
      benchmark_name:
        required: True
        type: string
        description: |
          Benchmark name
      side_a_triton:
        type: string
        required: False
        default: "triton-lang/triton"
        description: |
          Triton repository to test on side A, e.g., "triton-lang/triton"
      side_a_commit:
        type: string
        required: False
        description: |
          Triton commit or tag to test on side A, e.g., "main"
      side_b_triton:
        type: string
        required: False
        default: "triton-lang/triton"
        description: |
          Triton repository to test on side B, e.g., "triton-lang/triton"
      side_b_commit:
        type: string
        required: False
        description: |
          Triton commit or tag to test on side B, e.g., "main"

jobs:
  linux-benchmark-mi350:
    if: github.repository_owner == 'meta-pytorch'
    runs-on: [amd-mi350-runner]
    timeout-minutes: 240
    environment: docker-s3-upload
    permissions:
      id-token: write
      contents: read
    env:
      SETUP_SCRIPT: "/workspace/setup_instance.sh"
      RUNNER_TYPE: "amd-mi350-runner"
      DOCKER_IMAGE: "ghcr.io/meta-pytorch/tritonbench:rocm-latest"
      TRITONBENCH_SIDE_A_ENV: "triton-main"
      JOB_NAME: tritonbench-mi350-${{ inputs.test_type }}-${{ inputs.benchmark_name }}
      TRITONBENCH_SCRIBE_GRAPHQL_ACCESS_TOKEN: ${{ secrets.TRITONBENCH_SCRIBE_GRAPHQL_ACCESS_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Tritonbench
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::308535385114:role/gha_workflow_upload-benchmark-results
          # The max duration enforced by the server side
          role-duration-seconds: 18000
          aws-region: us-east-1
      - name: Setup uploader dependencies
        run: |
          sudo apt-get install -y python3-pip
          pip3 install -r .ci/upload/requirements.txt
      - name: Pull docker image
        uses: pytorch/test-infra/.github/actions/pull-docker-image@main
        with:
          docker-image: ${{ env.DOCKER_IMAGE }}
      - name: Start docker container
        run: |
          set -eux
          
          GPU_FLAG="--device /dev/kfd --device /dev/dri --security-opt seccomp=unconfined "

          container_name=$(docker run \
            ${GPU_FLAG:-} \
            -e CONDA_ENV="${TRITONBENCH_SIDE_A_ENV}" \
            --ipc=host \
            --tty \
            --detach \
            --security-opt seccomp=unconfined \
            --shm-size=32g \
            --cap-add=SYS_PTRACE \
            --user root \
            -v "${GITHUB_WORKSPACE}:/tmp/workspace" \
            -w /tmp/workspace \
            "${DOCKER_IMAGE}"
          )

          # write container id to env
          echo "TRITONBENCH_CONTAINER_ID=${container_name}" >> $GITHUB_ENV
      - name: Compile Triton side A (On Demand)
        if: ${{ inputs.side_a_triton && inputs.side_a_commit }}
        run: |
          docker exec -t -w /tmp/workspace "${TRITONBENCH_CONTAINER_ID}" bash -c "
            set -eux
            bash ./.ci/triton/install.sh --repo ${{ inputs.side_a_triton }} --commit ${{ inputs.side_a_commit }} --side a
          "
          export 'TRITONBENCH_SIDE_A_ENV="triton-side-a"' >> ${GITHUB_ENV}
      - name: Benchmark Triton (Side A)
        run: |
          set -eux
          docker exec -t -w /tmp/workspace "${TRITONBENCH_CONTAINER_ID}" bash -c "
            set -eux
            bash .ci/tritonbench/run-benchmark.sh ${{ inputs.benchmark_name }} --conda-env ${TRITONBENCH_SIDE_A_ENV}
          "
          mkdir -p benchmark-output
          cp -r ".benchmarks/${{ inputs.benchmark_name }}" benchmark-output/${TRITONBENCH_SIDE_A_ENV}
          rm -rf .benchmarks || true
          # post-process result.json
          latest_result_json=$(find ./benchmark-output/${TRITONBENCH_SIDE_A_ENV} -name "result.json"  | sort -r | head -n 1)
          python3 ./.ci/test_infra/oss_ci_benchmark_v3.py --json ${latest_result_json} \
            --add-github-env --output ${latest_result_json}
      - name: Compile Triton side B (On Demand)
        if: ${{ inputs.test_type == 'abtest' && inputs.side_b_triton && inputs.side_b_commit }}
        run: |
          docker exec -t -w /tmp/workspace "${TRITONBENCH_CONTAINER_ID}" bash -c "
            set -eux
            bash ./.ci/triton/install.sh --repo ${{ inputs.side_b_triton }} --commit ${{ inputs.side_b_commit }} --side a
          "
          export 'TRITONBENCH_SIDE_B_ENV="triton-side-b"' >> ${GITHUB_ENV}
      - name: Benchmark Triton (Side B)
        if: ${{ inputs.test_type == 'abtest' && inputs.side_b_triton && inputs.side_b_commit }}
        run: |
          set -eux
          docker exec -t -w /tmp/workspace "${TRITONBENCH_CONTAINER_ID}" bash -c "
            set -eux
            bash .ci/tritonbench/run-benchmark.sh ${{ inputs.benchmark_name }} --conda-env ${TRITONBENCH_SIDE_B_ENV}
          "
          mkdir -p benchmark-output
          cp -r ".benchmarks/${{ inputs.benchmark_name }}" benchmark-output/${TRITONBENCH_SIDE_B_ENV}
          rm -rf .benchmarks || true
          # post-process result.json
          latest_result_json=$(find ./benchmark-output/${TRITONBENCH_SIDE_B_ENV} -name "result.json"  | sort -r | head -n 1)
          python3 ./.ci/test_infra/oss_ci_benchmark_v3.py --json ${latest_result_json} \
            --add-github-env --output ${latest_result_json}
      - name: Upload result to GH Actions Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.JOB_NAME }}
          path: benchmark-output/
      - name: Upload result to Scribe
        run: |
          if [[ -n "${TRITONBENCH_SIDE_A_ENV}" ]]; then
            latest_result_json=$(find ./benchmark-output/${TRITONBENCH_SIDE_A_ENV} -name "result.json"  | sort -r | head -n 1)
            python3 ./.ci/upload/scribe.py --json ${latest_result_json}
          fi
          if [[ -n "${TRITONBENCH_SIDE_B_ENV}" ]]; then
            latest_result_json=$(find ./benchmark-output/${TRITONBENCH_SIDE_B_ENV} -name "result.json"  | sort -r | head -n 1)
            python3 ./.ci/upload/scribe.py --json ${latest_result_json}
          fi
      - name: Rewrite Tritonbench json to ClickHouse style
        run: |
          if [[ -n "${TRITONBENCH_SIDE_A_ENV}" ]]; then
            latest_result_json=$(find ./benchmark-output/${TRITONBENCH_SIDE_A_ENV} -name "result.json"  | sort -r | head -n 1)
            python3 ./.ci/test_infra/oss_ci_benchmark_v3.py --json ${latest_result_json} \
                  --output benchmark-output/clickhouse-results/result-${TRITONBENCH_SIDE_A_ENV}.json
          fi
          if [[ -n "${TRITONBENCH_SIDE_B_ENV}" ]]; then
            latest_result_json=$(find ./benchmark-output/${TRITONBENCH_SIDE_B_ENV} -name "result.json"  | sort -r | head -n 1)
            python3 ./.ci/test_infra/oss_ci_benchmark_v3.py --json ${latest_result_json} \
                  --output benchmark-output/clickhouse-results/result-${TRITONBENCH_SIDE_B_ENV}.json
          fi
      - name: Upload result to ClickHouse
        uses: pytorch/test-infra/.github/actions/upload-benchmark-results@main
        with:
          benchmark-results-dir: benchmark-output/clickhouse-results
          dry-run: false
          schema-version: v3
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Kill the container
        if: always()
        run: |
          docker kill "${TRITONBENCH_CONTAINER_ID}" || true
